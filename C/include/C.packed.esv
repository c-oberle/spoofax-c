Module("C.main.packed",Imports([Import("C.main"),Import("C-Colorer"),Import("C-Completions"),Import("C-Folding"),Import("C-Menus"),Import("C-Refactorings"),Import("C-References"),Import("C-Syntax"),Import("C-Views"),Import("C-Colorer.generated"),Import("src-gen/completions/C-esv"),Import("C-Folding.generated"),Import("C-Refactorings.generated"),Import("C-References.generated"),Import("C-Syntax.generated")]),[Language(" General properties",[LanguageName("C"),LanguageId("C"),Extends(Values(["Root"])),Description(String("\"Spoofax-generated editor for the C language\"")),URL("http://strategoxt.org"),Extensions(Values(["c"])),Table("include/C.tbl"),StartSymbols([Sort("TranslationUnit")]),SemanticProvider("include/c.ctree"),SemanticProvider("include/c-java.jar"),SemanticObserver(Strategy("editor-analyze"),[MultiFile]),Disambiguator(Strategy("disamb")),OnSave(Strategy("editor-save"),None)]),Colorer(" Default, token-based highlighting",[ColorRule(Token(TK_KEYWORD),Attribute(ColorRGB("127","0","85"),NoColor,BOLD)),ColorRule(Token(TK_IDENTIFIER),AttributeRef("default")),ColorRule(Token(TK_STRING),AttributeRef("blue")),ColorRule(Token(TK_NUMBER),AttributeRef("darkgreen")),ColorRule(Token(TK_VAR),Attribute(ColorRGB("255","0","100"),NoColor,ITALIC)),ColorRule(Token(TK_OPERATOR),Attribute(ColorRGB("0","0","128"),NoColor,NORMAL)),ColorRule(Token(TK_LAYOUT),Attribute(ColorRGB("63","127","95"),NoColor,ITALIC))]),Colorer(" System colors",[ColorDef("darkred",Attribute(ColorRGB("128","0","0"),NoColor,NORMAL)),ColorDef("red",Attribute(ColorRGB("255","0","0"),NoColor,NORMAL)),ColorDef("darkgreen",Attribute(ColorRGB("0","128","0"),NoColor,NORMAL)),ColorDef("green",Attribute(ColorRGB("0","255","0"),NoColor,NORMAL)),ColorDef("darkblue",Attribute(ColorRGB("0","0","128"),NoColor,NORMAL)),ColorDef("blue",Attribute(ColorRGB("0","0","255"),NoColor,NORMAL)),ColorDef("cyan",Attribute(ColorRGB("0","255","255"),NoColor,NORMAL)),ColorDef("magenta",Attribute(ColorRGB("255","0","255"),NoColor,NORMAL)),ColorDef("yellow",Attribute(ColorRGB("255","255","0"),NoColor,NORMAL)),ColorDef("white",Attribute(ColorRGB("255","255","255"),NoColor,NORMAL)),ColorDef("black",Attribute(ColorRGB("0","0","0"),NoColor,NORMAL)),ColorDef("gray",Attribute(ColorRGB("128","128","128"),NoColor,NORMAL)),ColorDef("grey",AttributeRef("gray")),ColorDef("orange",Attribute(ColorRGB("255","165","0"),NoColor,NORMAL)),ColorDef("pink",Attribute(ColorRGB("255","105","180"),NoColor,NORMAL)),ColorDef("brown",Attribute(ColorRGB("139","69","19"),NoColor,NORMAL)),ColorDef("default",Attribute(ColorDefault,NoColor,NORMAL))]),Completions("",[CompletionTemplateEx([Sort("Start")],NoCompletionPrefix,[String("\"module \""),Placeholder("<m>")],[Blank]),CompletionTemplateEx([Sort("Definition")],NoCompletionPrefix,[String("\"entity \""),Placeholder("<e>"),String("\" {\""),Cursor,String("\"}\"")],[Blank]),CompletionTemplateEx([Sort("Property")],CompletionPrefix(String("\"property : Type\"")),[Placeholder("<x>"),String("\" : \""),Placeholder("<T>")],[Blank])]),Completions("",[CompletionProposer([],Strategy("editor-complete")),CompletionTrigger(String("\":\""),None)]),Completions("",[CompletionKeyword(String("\"\\\\a\""),None),CompletionKeyword(String("\"\\\\b\""),None),CompletionKeyword(String("\"\\\\f\""),None),CompletionKeyword(String("\"\\\\n\""),None),CompletionKeyword(String("\"\\\\r\""),None),CompletionKeyword(String("\"\\\\t\""),None),CompletionKeyword(String("\"\\\\v\""),None),CompletionKeyword(String("\"\\\\x\""),None),CompletionKeyword(String("\"\\\\u\""),None),CompletionKeyword(String("\"\\\\U\""),None),CompletionKeyword(String("\"0x\""),None),CompletionKeyword(String("\"0X\""),None),CompletionKeyword(String("\"_Bool\""),None),CompletionKeyword(String("\"_Complex\""),None),CompletionKeyword(String("\"_Imaginary\""),None)]),Folding(" Default folding definitions",[FoldRule(SortAndConstructor(Sort("TranslationUnit"),Constructor("TranslationUnit")),None),FoldRule(Sort("OptExternalDeclarationSeq2"),None),FoldRule(SortAndConstructor(Sort("ExternalDeclarationSeq"),Constructor("ExtDecSeq")),None),FoldRule(SortAndConstructor(Sort("FunctionDefinition"),Constructor("FunDef")),None),FoldRule(Sort("OptPointerSeq2"),None),FoldRule(SortAndConstructor(Sort("PointerSeq"),Constructor("PointerSeq")),None),FoldRule(SortAndConstructor(Sort("Pointer"),Constructor("Pointer")),None),FoldRule(Sort("OptTypeQualifierList2"),None),FoldRule(SortAndConstructor(Sort("TypeQualifierList"),Constructor("TypeQualifierList")),None),FoldRule(SortAndConstructor(Sort("PrimaryExpr"),Constructor("StringLitSeq")),None),FoldRule(Sort("PointerSeq"),None),FoldRule(SortAndConstructor(Sort("DirectDeclarator"),Constructor("DeclTypeQualifiers")),None),FoldRule(SortAndConstructor(Sort("DirectDeclarator"),Constructor("DeclIds")),None),FoldRule(Sort("OptIdentifierList2"),None),FoldRule(SortAndConstructor(Sort("IdentifierList"),Constructor("IdentifierList")),None),FoldRule(Sort("OptDeclarationList2"),None),FoldRule(SortAndConstructor(Sort("DeclarationList"),Constructor("DecSeq")),None),FoldRule(SortAndConstructor(Sort("Declaration"),Constructor("Dec")),None),FoldRule(Sort("OptInitDeclaratorList2"),None),FoldRule(SortAndConstructor(Sort("InitDeclaratorList"),Constructor("InitDeclaratorList")),None),FoldRule(SortAndConstructor(Sort("InitDeclarator"),Constructor("InitDeclarator")),None),FoldRule(Sort("ExprStm"),None),FoldRule(SortAndConstructor(Sort("ExprStm"),Constructor("ExprStm")),None),FoldRule(SortAndConstructor(Sort("Stm"),Constructor("JumpStm")),None),FoldRule(SortAndConstructor(Sort("JumpStm"),Constructor("Return")),None)]),Menus([ToolbarMenu(Label(String("\"Syntax\"")),[OpenEditor],[Action(String("\"Format\""),Strategy("editor-format"),[RealTime,Source]),Action(String("\"Show abstract syntax\""),Strategy("debug-show-aterm"),[RealTime,Meta,Source]),Action(String("\"Show analyzed syntax\""),Strategy("debug-show-analyzed"),[Meta])]),ToolbarMenu(Label(String("\"Analysis\"")),[Meta],[Action(String("\"Reset and reanalyze\""),Strategy("debug-reanalyze"),[]),Submenu(String("\"Show analysis\""),[OpenEditor],[Action(String("\"Project\""),Strategy("debug-project"),[]),Action(String("\"Partition\""),Strategy("debug-partition"),[])]),Submenu(String("\"Show index\""),[OpenEditor],[Action(String("\"Project\""),Strategy("debug-index-project"),[]),Action(String("\"Project (resolved)\""),Strategy("debug-index-project-resolve"),[]),Action(String("\"Partition\""),Strategy("debug-index-partition"),[]),Action(String("\"Partition (resolved)\""),Strategy("debug-index-partition-resolve"),[])]),Submenu(String("\"Show tasks\""),[OpenEditor],[Action(String("\"Project\""),Strategy("debug-task-project"),[]),Action(String("\"Partition\""),Strategy("debug-task-partition"),[]),Action(String("\"Selection\""),Strategy("debug-task-selection"),[])])]),ToolbarMenu(Label(String("\"Generation\"")),[OpenEditor,RealTime],[Action(String("\"Generate Java\""),Strategy("generate-java"),[])])]),Refactorings("",[TextReconstruction(Strategy("construct-textual-change")),Refactoring([Sort("ID")],String("\"Rename Entity\""),Strategy("rename-refactoring"),[Cursor],[Shortcut(KeyCombination(["Shift","Alt","R"])),UserInput([IdInputField(String("\"new name\""),String("\"\""))])])]),KeyBindings(" Predefined Keybindings",[KeyBinding(KeyCombination(["Shift","Alt","R"]),String("\"org.eclipse.jdt.ui.edit.text.java.rename.element\"")),KeyBinding(KeyCombination(["Shift","Alt","I"]),String("\"org.eclipse.jdt.ui.edit.text.java.inline\"")),KeyBinding(KeyCombination(["Shift","Alt","M"]),String("\"org.eclipse.jdt.ui.edit.text.java.extract.method\"")),KeyBinding(KeyCombination(["Shift","Alt","V"]),String("\"org.eclipse.jdt.ui.move.method\"")),KeyBinding(KeyCombination(["Shift","Alt","C"]),String("\"org.eclipse.jdt.ui.change.method.signature\"")),KeyBinding(KeyCombination(["Shift","Alt","L"]),String("\"org.eclipse.jdt.ui.edit.text.java.extract.local.variable\"")),KeyBinding(KeyCombination(["Shift","Ctrl","F"]),String("\"org.eclipse.jdt.ui.edit.text.java.format\"")),KeyBinding(KeyCombination(["Ctrl","I"]),String("\"org.eclipse.jdt.ui.edit.text.java.indent\"")),KeyBinding(KeyCombination(["Shift","Ctrl","C"]),String("\"org.eclipse.jdt.ui.edit.text.java.toggle.comment\"")),KeyBinding(KeyCombination(["Shift","Ctrl","M"]),String("\"org.eclipse.jdt.ui.edit.text.java.add.import\"")),KeyBinding(KeyCombination(["Shift","Ctrl","O"]),String("\"org.eclipse.jdt.ui.edit.text.java.organize.imports\""))]),References("",[ReferenceRule("_",Strategy("editor-resolve")),HoverRule("_",Strategy("editor-hover"))]),Language(" Syntax properties (static defaults)",[LineCommentPrefix(String("\"//\"")),BlockCommentDefs(BlockCommentDef(String("\"/*\""),"*",String("\"*/\""))),FenceDefs([FenceDef("[","]"),FenceDef("(",")"),FenceDef("{","}")]),IndentDefs([IndentDef(String("\"=\"")),IndentDef(String("\":\""))]),IdentifierLexical(String("\"[A-Za-z0-9_]+\""))]),Views([OutlineView(Strategy("editor-outline"),[Source],Some(ExpandToLevel("3"))),PropertiesView(Strategy("editor-properties"),[])])])
module C

signature
  constructors
                              : Include -> ExternalDeclaration
    ExtDec                    : Declaration -> ExternalDeclaration
                              : FunctionDefinition -> ExternalDeclaration
    ExtDecSeq                 : List(ExternalDeclaration) -> ExternalDeclarationSeq
    TranslationUnit           : Option(ExternalDeclarationSeq) -> TranslationUnit
    Include                   : IncludeFile -> Include
    StdInclude                : IncludeFile -> Include
                              : String -> IncludeFile
    Dec                       : DeclarationSpecifierSeq * Option(InitDeclaratorList) -> Declaration
    DecSeq                    : List(Declaration) -> DeclarationList
    FunDef                    : DeclarationSpecifierSeq * Declarator * Option(DeclarationList) * CompoundStm -> FunctionDefinition
                              : Declaration -> BlockItem
                              : Stm -> BlockItem
    BlockItems                : List(BlockItem) -> BlockItemList
    Block                     : Option(BlockItemList) -> CompoundStm
    JumpStm                   : JumpStm -> Stm
    IterationStm              : IterationStm -> Stm
    SelectionStm              : SelectionStm -> Stm
                              : ExprStm -> Stm
                              : CompoundStm -> Stm
    LabeledStm                : LabeledStm -> Stm
    Default                   : Stm -> LabeledStm
    Case                      : ConstantExpr * Stm -> LabeledStm
    Label                     : Identifier * Stm -> LabeledStm
    Goto                      : Identifier -> JumpStm
    Return                    : Option(Expr) -> JumpStm
    Continue                  : JumpStm
    Break                     : JumpStm
    ForDec                    : Declaration * Option(Expr) * Option(Expr) * Stm -> IterationStm
    For                       : Option(Expr) * Option(Expr) * Option(Expr) * Stm -> IterationStm
    Do                        : Stm * Expr -> IterationStm
    While                     : Expr * Stm -> IterationStm
    Switch                    : Expr * Stm -> SelectionStm
    If                        : Expr * Stm * Stm -> SelectionStm
    If                        : Expr * Stm -> SelectionStm
    ExprStm                   : Option(Expr) -> ExprStm
    InitDeclarator            : Declarator * Initializer -> InitDeclarator
                              : Declarator -> InitDeclarator
    InitDeclaratorList        : List(InitDeclarator) -> InitDeclaratorList
    Minus                     : AdditiveExpr * MultiplicativeExpr -> AdditiveExpr
    Plus                      : AdditiveExpr * MultiplicativeExpr -> AdditiveExpr
                              : MultiplicativeExpr -> AdditiveExpr
    Mod                       : MultiplicativeExpr * CastExpr -> MultiplicativeExpr
    Div                       : MultiplicativeExpr * CastExpr -> MultiplicativeExpr
    Mul                       : MultiplicativeExpr * CastExpr -> MultiplicativeExpr
                              : CastExpr -> MultiplicativeExpr
    Cast                      : TypeName * CastExpr -> CastExpr
                              : UnaryExpr -> CastExpr
    Complement                : UnaryOperator
    Not                       : UnaryOperator
    Minus                     : UnaryOperator
    Plus                      : UnaryOperator
    Ref                       : UnaryOperator
    Deref                     : UnaryOperator
    SizeOfType                : TypeName -> UnaryExpr
    SizeOf                    : UnaryExpr -> UnaryExpr
    CastExpr                  : UnaryOperator * CastExpr -> UnaryExpr
    PreDecr                   : UnaryExpr -> UnaryExpr
    PreIncr                   : UnaryExpr -> UnaryExpr
                              : PostfixExpr -> UnaryExpr
    PostfixExprTrComma        : TypeName * InitializerList -> PostfixExpr
    PostfixExpr               : TypeName * InitializerList -> PostfixExpr
    PostDecr                  : PostfixExpr -> PostfixExpr
    PostIncr                  : PostfixExpr -> PostfixExpr
    PMemberAccess             : PostfixExpr * Identifier -> PostfixExpr
    MemberAccess              : PostfixExpr * Identifier -> PostfixExpr
    Call                      : PostfixExpr * Option(Expr) -> PostfixExpr
    ArraySubscript            : PostfixExpr * Expr -> PostfixExpr
    PrimaryExpr               : PrimaryExpr -> PostfixExpr
    AbstrDeclParamTypes       : Option(DirectAbstractDeclarator) * Option(ParameterTypeList) -> DirectAbstractDeclarator
    AbstrDeclDeref            : Option(DirectAbstractDeclarator) -> DirectAbstractDeclarator
    AbstrDeclAssign           : Option(DirectAbstractDeclarator) * Option(AssignmentExpr) -> DirectAbstractDeclarator
    AbstrDeclPar              : AbstractDeclarator -> DirectAbstractDeclarator
    AbstrDeclPointer          : Option(PointerSeq) * DirectAbstractDeclarator -> AbstractDeclarator
                              : PointerSeq -> AbstractDeclarator
    TypeName                  : SpecifierQualifierList * Option(AbstractDeclarator) -> TypeName
    ParamDecAbstr             : DeclarationSpecifierSeq * Option(AbstractDeclarator) -> ParameterDeclaration
    ParamDec                  : DeclarationSpecifierSeq * Declarator -> ParameterDeclaration
    ParamList                 : List(ParameterDeclaration) -> ParameterList
    VarArgs                   : ParameterList -> ParameterTypeList
                              : ParameterList -> ParameterTypeList
    DecSpecifierSeq           : List(DeclarationSpecifier) -> DeclarationSpecifierSeq
    FunSpecifier              : FunctionSpecifier -> DeclarationSpecifier
    TypeQualifier             : TypeQualifier -> DeclarationSpecifier
    TypeSpecifier             : TypeSpecifier -> DeclarationSpecifier
    StorageClassSpecifier     : StorageClassSpecifier -> DeclarationSpecifier
                              : Identifier -> TypedefName
    TypedefName               : TypedefName -> TypeSpecifier
    Enum                      : EnumSpecifier -> TypeSpecifier
    StructOrUnion             : StructOrUnionSpecifier -> TypeSpecifier
    Imaginary                 : TypeSpecifier
    Complex                   : TypeSpecifier
    Bool                      : TypeSpecifier
    Unsigned                  : TypeSpecifier
    Signed                    : TypeSpecifier
    Double                    : TypeSpecifier
    Float                     : TypeSpecifier
    Long                      : TypeSpecifier
    Int                       : TypeSpecifier
    Short                     : TypeSpecifier
    Char                      : TypeSpecifier
    Void                      : TypeSpecifier
    StructDeclarator          : Option(Declarator) * ConstantExpr -> StructDeclarator
                              : Declarator -> StructDeclarator
    StructDeclList            : List(StructDeclarator) -> StructDeclaratorList
    StructDec                 : SpecifierQualifierList * StructDeclaratorList -> StructDeclaration
    StructDecList             : List(StructDeclaration) -> StructDeclarationList
    Union                     : StructOrUnion
    Struct                    : StructOrUnion
    StructOrUnionSpecifier    : StructOrUnion * Identifier -> StructOrUnionSpecifier
    StructOrUnionDec          : StructOrUnion * Option(Identifier) * StructDeclarationList -> StructOrUnionSpecifier
    SpecifierQualifierList    : List(SpecifierQualifier) -> SpecifierQualifierList
    TypeQualifier             : TypeQualifier -> SpecifierQualifier
    TypeSpecifier             : TypeSpecifier -> SpecifierQualifier
    Extern                    : StorageClassSpecifier
    Static                    : StorageClassSpecifier
    Register                  : StorageClassSpecifier
    Auto                      : StorageClassSpecifier
    Typedef                   : StorageClassSpecifier
    Inline                    : FunctionSpecifier
    IdentifierList            : List(Identifier) -> IdentifierList
    Pointer                   : Option(TypeQualifierList) -> Pointer
    PointerSeq                : List(Pointer) -> PointerSeq
    DeclIds                   : DirectDeclarator * Option(IdentifierList) -> DirectDeclarator
    DeclParams                : DirectDeclarator * ParameterTypeList -> DirectDeclarator
    DeclTypeQualifiers        : DirectDeclarator * Option(TypeQualifierList) -> DirectDeclarator
    DeclQualifierStaticAssign : DirectDeclarator * TypeQualifierList * AssignmentExpr -> DirectDeclarator
    DeclStaticAssign          : DirectDeclarator * Option(TypeQualifierList) * AssignmentExpr -> DirectDeclarator
    DeclQualifierAssign       : DirectDeclarator * Option(TypeQualifierList) * Option(AssignmentExpr) -> DirectDeclarator
    DeclPar                   : Declarator -> DirectDeclarator
                              : Identifier -> DirectDeclarator
    Declarator                : Option(PointerSeq) * DirectDeclarator -> Declarator
    TypeQualifierList         : List(TypeQualifier) -> TypeQualifierList
    Volatile                  : TypeQualifier
    Restrict                  : TypeQualifier
    Const                     : TypeQualifier
    ParenExpr                 : Expr -> PrimaryExpr
    StringLitSeq              : List(StringLiteral) -> PrimaryExpr
    Lit                       : Literal -> PrimaryExpr
                              : Identifier -> PrimaryExpr
    FloatLit                  : FloatLiteral -> Literal
    CharLit                   : CharLiteral -> Literal
    IntLit                    : IntLiteral -> Literal
                              : STRING-LITERAL -> StringLiteral
                              : String -> STRING-LITERAL
                              : INTEGER-LITERAL -> IntLiteral
                              : String -> INTEGER-LITERAL
                              : HEXADECIMAL-FLOATING-CONSTANT -> FloatLiteral
                              : DECIMAL-FLOATING-CONSTANT -> FloatLiteral
                              : String -> HEXADECIMAL-FLOATING-CONSTANT
                              : String -> DECIMAL-FLOATING-CONSTANT
                              : Identifier -> EnumerationConstant
    EnumeratorDef             : EnumerationConstant * ConstantExpr -> EnumeratorDefinition
    EnumeratorConst           : EnumerationConstant -> EnumeratorDefinition
    EnumeratorList            : List(EnumeratorDefinition) -> EnumeratorList
    EnumIdentifier            : Identifier -> EnumSpecifier
    EnumSpecifierTrComma      : Option(Identifier) * EnumeratorList -> EnumSpecifier
    EnumSpecifier             : Option(Identifier) * EnumeratorList -> EnumSpecifier
                              : CHARACTER-LITERAL -> CharLiteral
                              : String -> CHARACTER-LITERAL
    InitializerList           : List(InitializerSeq) -> InitializerList
    InitializerSeq            : Option(Designation) * Initializer -> InitializerSeq
    InitializerTrComma        : InitializerList -> Initializer
    Initializer               : InitializerList -> Initializer
                              : AssignmentExpr -> Initializer
    DotDesignator             : Identifier -> Designator
    BracketDesignator         : ConstantExpr -> Designator
    DesignatorList            : List(Designator) -> DesignatorList
    Designation               : DesignatorList -> Designation
    Id                        : ID -> Identifier
                              : String -> ID
    ConstExpr                 : CondExpr -> ConstantExpr
    AssignOpOr                : AssignmentOperator
    AssignOpXor               : AssignmentOperator
    AssignOpAnd               : AssignmentOperator
    AssignOpShiftL            : AssignmentOperator
    AssignOpShiftR            : AssignmentOperator
    AssignOpMinus             : AssignmentOperator
    AssignOpPlus              : AssignmentOperator
    AssignOpMod               : AssignmentOperator
    AssignOpDiv               : AssignmentOperator
    AssignOpMul               : AssignmentOperator
    AssignOp                  : AssignmentOperator
    Assign                    : UnaryExpr * AssignmentOperator * AssignmentExpr -> AssignmentExpr
                              : CondExpr -> AssignmentExpr
    Cond                      : LogicalOrExpr * Expr * CondExpr -> CondExpr
                              : LogicalOrExpr -> CondExpr
    LogicalOr                 : LogicalOrExpr * LogicalAndExpr -> LogicalOrExpr
                              : LogicalAndExpr -> LogicalOrExpr
    LogicalAnd                : LogicalAndExpr * OrExpr -> LogicalAndExpr
                              : OrExpr -> LogicalAndExpr
    Or                        : OrExpr * ExclusiveOrExpr -> OrExpr
                              : ExclusiveOrExpr -> OrExpr
    ExcOr                     : ExclusiveOrExpr * AndExpr -> ExclusiveOrExpr
                              : AndExpr -> ExclusiveOrExpr
    And                       : AndExpr * EqualityExpr -> AndExpr
                              : EqualityExpr -> AndExpr
    NotEq                     : EqualityExpr * RelationalExpr -> EqualityExpr
    Eq                        : EqualityExpr * RelationalExpr -> EqualityExpr
                              : RelationalExpr -> EqualityExpr
    GtEq                      : RelationalExpr * ShiftExpr -> RelationalExpr
    LtEq                      : RelationalExpr * ShiftExpr -> RelationalExpr
    Gt                        : RelationalExpr * ShiftExpr -> RelationalExpr
    Lt                        : RelationalExpr * ShiftExpr -> RelationalExpr
                              : ShiftExpr -> RelationalExpr
    RightShift                : ShiftExpr * AdditiveExpr -> ShiftExpr
    LeftShift                 : ShiftExpr * AdditiveExpr -> ShiftExpr
                              : AdditiveExpr -> ShiftExpr
    Expr                      : List(AssignmentExpr) -> Expr


signature
  constructors
    Some : a -> Option(a)
    None : Option(a)


signature
  constructors
    Cons : a * List(a) -> List(a)
    Nil  : List(a)
    Conc : List(a) * List(a) -> List(a)
